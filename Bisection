import React, { useState } from 'react';

function Bisection() {
  const [a, setA] = useState(0);
  const [b, setB] = useState(1);
  const [ans, setans] = useState(1);
  const [tolerance, setTolerance] = useState(0.0001);
  const [result, setResult] = useState(null);

  const f = (x) => eval(ans); // Define the function here

  const calculateRoot = () => {
    let a = parseFloat(document.getElementById("a").value);
    let b = parseFloat(document.getElementById("b").value);
    let ans =(document.getElementById("ans").value);
    let tolerance = parseFloat(document.getElementById("tolerance").value);

    let fa = f(a);
    let fb = f(b);



    let c;
    let fc;
    let iteration = 0;

    while ((b - a) >= tolerance) {
      c = (a + b) / 2;
      fc = f(c);

      if (fc === 0.0) {
        break;
      } else if (fa * fc < 0) {
        b = c;
        fb = fc;
      } else {
        a = c;
        fa = fc;
      }

      iteration++;
    }

    setResult(`Root: ${c} (found in ${iteration} iterations)`);
  }

  return (
    <div>
      <div>

        <label htmlFor="a">a:</label>
        <input type="number" id="a" value={a} onChange={(e) => setA(parseFloat(e.target.value))} />
      </div>
      <div>
        <label htmlFor="b">b:</label>
        <input type="number" id="b" value={b} onChange={(e) => setB(parseFloat(e.target.value))} />
      </div>
      <div>
        <label htmlFor="ans">ans:</label>
        <input type="text" id="ans" value={ans} onChange={(e) => setans(e.target.value)} />
      </div>
      
      <div>
        <label htmlFor="tolerance">Tolerance:</label>
        <input type="number" id="tolerance" value={tolerance} onChange={(e) => setTolerance(parseFloat(e.target.value))} />
      </div>
      <button onClick={calculateRoot}>Calculate Root</button>
      <div>{result}</div>
    </div>
  );
}

export default Bisection;
