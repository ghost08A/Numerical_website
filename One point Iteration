import React, { useState } from 'react';

function OnePointIteration() {
  const [initialGuess, setInitialGuess] = useState(0);
  const [tolerance, setTolerance] = useState(0.0001);
  const [ans, setans] = useState("");
  const [result, setResult] = useState(null);

  const g = (x) => eval(ans); // Define the function here

  
  const calculateRoot = () => {
    let x0 = initialGuess;
    let x1 = g(x0);
    let iteration = 0;
    let max = 100000000;
    console.log(x1);
    
    while (Math.abs(x1 - x0) >= tolerance) {
      
      x0 = x1;
      x1 = g(x0);
      iteration++;
      if(iteration >= max){
        break;
      }
    }
    if(iteration >= max){
      setResult(`It max iteration`);
    }else{
      setResult(`Root: ${x1} (found in ${iteration} iterations)`);
    }
  }

  return (
    <div>
      <div>
        <label htmlFor="initialGuess">Initial Guess:</label>
        <input
          type="number"
          id="initialGuess"
          value={initialGuess}
          onChange={(e) => setInitialGuess(parseFloat(e.target.value))}
        />
      </div>
      <label htmlFor="ans">ans:</label>
      <div>
          <input
            type="text"
            id="ans"
            value={ans}
            onChange={(e) => setans(e.target.value)}
          />
      </div>
    
      <div>
        <label htmlFor="tolerance">Tolerance:</label>
        <input
          type="number"
          id="tolerance"
          value={tolerance}
          onChange={(e) => setTolerance(parseFloat(e.target.value))}
        />
      </div>
      <button onClick={calculateRoot}>Calculate Root</button>
      <div>{result}</div>
    </div>
  );
}

export default OnePointIteration;
